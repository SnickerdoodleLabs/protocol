openapi: 3.0.3
info:
  title: Insight Platform Required API
  description: Every insight platform that wants to be compatible with the Snickerdoodle Protocol (SDP) and the Snickerdoodle Core (SDC) must implement this API. All API paths will be appended to an undefined base URL, such as https://insight.example.com/v0/snickerdoodle, by the SDC
  termsOfService: https://snickerdoodlelabs.io/terms/
  contact:
    name: API Support
    url: https://snickerdoodlelabs.io/support
    email: support@snickerdoodlelabs.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: '0.1'
servers:
  - url: https://development.snickerdoodlelabs.io/v1
    description: Development server
  - url: https://staging.snickerdoodlelabs.io/v1
    description: Staging server
  - url: https://api.snickerdoodlelabs.io/v1
    description: Production server
    
paths:
  /responses:
    post:
      tags:
        - responses
      description: Responses to the subqueries with the business, data wallet, query and signiture metadata
      requestBody:
        description: The actual response to a query
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                consentContractId:
                  type: string
                  format: ethereum-contract-address
                queryId:
                  type: string
                  format: IPFS-CID
                dataWallet:
                  type: string
                  format: snickerdoodle-account-address
                returns:
                  description: Each logic return is formatted as a string, with JSON data inside it
                  type: array
                  items:
                    type: string
                signature:
                  type: string
                  format: hex-string
              required:
                - consentContractId
                - queryId
                - dataWallet
                - returns
                - signature
      responses:
        200:
          description: Returns true
          content:
            application/json:
              schema:
                type: boolean
        400:
          $ref: '#/components/responses/InvalidError'
                        
  /dns/{domainName}/txt:
    get:
      tags:
        - utility
      description: Returns all TXT records associated with the requested domain name
      parameters:
        - name: domainName
          in: path
          description: Top-level domain name to lookup, for example "example.com"
          required: true
          schema:
            type: string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: object
                properties:
                  records:
                    type: array
                    items:
                      type: string
        400:
          $ref: '#/components/responses/InvalidError'
  
  /cohort/{consentContractAddress}:
    post:
      tags:
        - cohort
      description: The data wallet will join the cohort. This method has the Insight Platform pay the gas to do this. The IP may pass on the cost to the business.
      parameters:
        - name: consentContractAddress
          in: path
          description: The ethereum address of the consent contract for the cohort you wish to leave.
          required: true
          schema:
            type: string
            format: ethereum-contract-address
      requestBody:
        description: Data required to verify the request to join the cohort
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataWallet:
                  description: The address of the data wallet
                  type: string
                  format: snickerdoodle-account-address
                tokenId:
                  description: The token ID of the invitation
                  type: string
                  format: snickerdoodle-account-address
                businessSignature:
                  description: The business' signature for the join transaction
                  type: string
                  format: hex-string
                signature:
                  description: This must be the the signature generated by signing the invitation transaction with the data wallet's private key.
                  type: string
                  format: hex-string
              required:
                - dataWallet
                - tokenId
                - signature
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: boolean
        400:
          $ref: '#/components/responses/InvalidError'
        401:
          $ref: '#/components/responses/SpecificUnsupportedError'
        403:
          $ref: '#/components/responses/UnsupportedError'
          
  /cohort/{consentContractAddress}/leave:
    put:
      tags:
        - cohort
      description: Removes the data wallet from the requested cohort by burning their consent token. This method has the Insight Platform pay the gas to do this. The IP may pass on the cost to the business.
      parameters:
        - name: consentContractAddress
          in: path
          description: The ethereum address of the consent contract for the cohort you wish to leave.
          required: true
          schema:
            type: string
            format: ethereum-contract-address
      requestBody:
        description: Data required to verify the request to leave the cohort
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataWallet:
                  description: The address of the data wallet
                  type: string
                  format: snickerdoodle-account-address
                signature:
                  description: This must be the the signature generated by signing the consentContractAddress with the data wallet's private key.
                  type: string
                  format: hex-string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: boolean
        400:
          $ref: '#/components/responses/InvalidError'
        401:
          $ref: '#/components/responses/SpecificUnsupportedError'
        403:
          $ref: '#/components/responses/UnsupportedError'
          
  /crumb/{accountAddress}:
    post:
      tags:
        - crumb
      description: Adds or updates the crumb for a particular account address for a data wallet.
      parameters:
        - name: accountAddress
          in: path
          description: The account address to register the crumb for
          required: true
          schema:
            type: string
            format: ethereum-contract-address
      requestBody:
        description: Data required to verify the request to leave the cohort
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dataWallet:
                  description: The address of the data wallet
                  type: string
                  format: snickerdoodle-account-address
                data:
                  description: The AES256 encrypted private key for the data wallet.
                  type: string
                initializationVector:
                  description: The AES256 initialization vector
                  type: string
                languageCode:
                  description: The ISO 639-1 2-letter language code that was used to generate the key that encrypted the data
                  type: string
                  format: iso-639-1
                signature:
                  description: The signature of the data, IV, and language code 
                  type: string
                  format: hex-string
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                type: boolean
        400:
          $ref: '#/components/responses/InvalidError'
        401:
          $ref: '#/components/responses/SpecificUnsupportedError'
        403:
          $ref: '#/components/responses/UnsupportedError'
          
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  responses:
    InvalidError:
      description: Data is invalid
    SpecificUnsupportedError:
      description: This method is not supported for this particular data wallet, consent contract, or combination of both. For example, when the insight platform is performing lazy transactions, not all consent contracts may support it.
    UnsupportedError:
      description: This method is unsupported by the insight platform. The SDC will need to use an alternate method.
      
  schemas:
    SubqueryReturn:
      type: object
      properties:
        subquery:
          type: string
        data:
          type: array
          items:
            type: number
            format: double
      required:
        - subquery
        - data
