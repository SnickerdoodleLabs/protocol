{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x56dBb76910d4C2F19ece28820ea675045FAd6dea",
    "txHash": "0x079ba29bfd5facc1bd0a1e3f90cadf0bc6fc2be4e6c0072ee1ba8e110db53cfa"
  },
  "proxies": [
    {
      "address": "0xdB5c885944d903Ac5c146eef400D2ee20572d357",
      "txHash": "0x93f5a3c1d2d76d38b8c3894517f563b0391d2257ce04d0e72d9feeb5826a87ef",
      "kind": "transparent"
    },
    {
      "address": "0x2231A160C7a7bba5a9dDbaF6a44A7EF76Ef74C77",
      "txHash": "0xa2b59020c60183e4500f6574d5aea79f81414e7d7728dc09850151ee65beac42",
      "kind": "transparent"
    },
    {
      "address": "0x5540122e78241679Da8d07A04A74D3a7f52aED97",
      "txHash": "0x2dcd5dce795a1606b4c68738ffe75c5faf7c66dfeb8597043d8abbf308811320",
      "kind": "transparent"
    },
    {
      "address": "0x73F4391c2669f79F15480d3e2Bb22e0792c682bE",
      "txHash": "0x8a0067d9ab00797d1cedb8fc32c46d18a0e663d69b9a54594f6be1cc65b87495",
      "kind": "transparent"
    },
    {
      "address": "0x5b6c961538E65b6EaCaf09Ec8E93D5f5f1d1afcC",
      "txHash": "0x07d433b955f8ada14fde697790906a10c37b9c0b07cb1735403fdb8cb874c05d",
      "kind": "transparent"
    },
    {
      "address": "0x692F3657c24B91Cb8516b9622b1F271E03cBcEC9",
      "txHash": "0x88696cef51f1b154ec27a9ac1d39885a2a305d3731f98f819425a481ef63e572",
      "kind": "transparent"
    }
  ],
  "impls": {
    "1b5f3972450e7ed8227c6b1c42ec52c7b4caafa0f0b03a07d43df6076240be8a": {
      "address": "0x6B3B98CeaA60D81E8B821B5D79AB6DD3b414f98E",
      "txHash": "0x4de725f87a3863c7e3c305616fd92be0595b5e519a1ccdde42bd9212b8b840ff",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "53",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "54",
            "type": "t_array(t_uint256)49_storage",
            "contract": "MinimalForwarderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/metatx/MinimalForwarderUpgradeable.sol:84"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "29fd3b59bba3d41ed22584c91f71f22951063c59b7c7e7e3c408bffecd128cf2": {
      "address": "0x58785108D8D5122b8026FB3585bb71D3C53789e1",
      "txHash": "0x7006bca2b041f1fe816cae390be1c3f93bdbca283bd9b621908965c0f8c080b9",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)12102_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "listingsHead",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:28"
          },
          {
            "label": "listingsTotal",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:31"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_struct(Listing)20922_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:34"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:40"
          },
          {
            "label": "addressToDeployedConsents",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:43"
          },
          {
            "label": "addressToDeployedConsentsIndex",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:46"
          },
          {
            "label": "consentAddressCheck",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:49"
          },
          {
            "label": "addressToUserRolesArray",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:53"
          },
          {
            "label": "addressToUserRolesArrayIndex",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:57"
          },
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)12102_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)20922_storage)": {
            "label": "mapping(uint256 => struct ConsentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12102_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11787_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Listing)20922_storage": {
            "label": "struct ConsentFactory.Listing",
            "members": [
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)11787_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a553fcf188c34ff6bac51f08fb96439a989d6b71fc4bb4bfb562769f8955045e": {
      "address": "0xa8Bb75dDc1207198Fc1fE6440563913eA5D2Aa4A",
      "txHash": "0x5c7c37e1f42bc3ff1ca9089f0dec2f84fcbaf5c2fb5c65e37a4acf6b93668c9a",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4164_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "listingsHead",
            "offset": 0,
            "slot": "251",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:28"
          },
          {
            "label": "listingsTotal",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:31"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_uint256,t_struct(Listing)6580_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:34"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:40"
          },
          {
            "label": "addressToDeployedConsents",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:43"
          },
          {
            "label": "addressToDeployedConsentsIndex",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:46"
          },
          {
            "label": "consentAddressCheck",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:49"
          },
          {
            "label": "addressToUserRolesArray",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:53"
          },
          {
            "label": "addressToUserRolesArrayIndex",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:57"
          },
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4164_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)6580_storage)": {
            "label": "mapping(uint256 => struct ConsentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4164_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3849_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Listing)6580_storage": {
            "label": "struct ConsentFactory.Listing",
            "members": [
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cid",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ed8ba97a965130e41a54a68c9d0b0bad84c97d80ccdc097ef0d56493f63aa979": {
      "address": "0x149572b7e2822207d4f82819F78c7649072138ab",
      "txHash": "0x1b29fd8d0152eb8943c6240f71a317539a12001520341511ed5af99a13012926",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)4164_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "listingTotals",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:23"
          },
          {
            "label": "listingDuration",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:26"
          },
          {
            "label": "maxTagsPerListing",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:29"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(Listing)8792_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:34"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:40"
          },
          {
            "label": "addressToDeployedConsents",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:43"
          },
          {
            "label": "addressToDeployedConsentsIndex",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:46"
          },
          {
            "label": "consentAddressCheck",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:49"
          },
          {
            "label": "addressToUserRolesArray",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:53"
          },
          {
            "label": "addressToUserRolesArrayIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:57"
          },
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(Listing)8792_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => struct IConsentFactory.Listing))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)4164_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)8792_storage)": {
            "label": "mapping(uint256 => struct IConsentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4164_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3849_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Listing)8792_storage": {
            "label": "struct IConsentFactory.Listing",
            "members": [
              {
                "label": "previous",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "consentContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeExpiring",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)3849_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "837043dfa6f9aafb52d2eb1c15f6d2325c4b78b5a1ec4649a9a94a036820e1ce": {
      "address": "0xfA45E1F38943Cf75F3f9EBb2705900152cfdBC35",
      "txHash": "0xd15a8886e914e51bd009670ee8fba51b2deb7ac79f1d670d54ec6d85a926b927",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)12102_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "listingTotals",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:23"
          },
          {
            "label": "listingDuration",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:26"
          },
          {
            "label": "maxTagsPerListing",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:29"
          },
          {
            "label": "listings",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(Listing)22930_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:34"
          },
          {
            "label": "trustedForwarder",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:40"
          },
          {
            "label": "addressToDeployedConsents",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:43"
          },
          {
            "label": "addressToDeployedConsentsIndex",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:46"
          },
          {
            "label": "consentAddressCheck",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:49"
          },
          {
            "label": "addressToUserRolesArray",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:53"
          },
          {
            "label": "addressToUserRolesArrayIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:57"
          },
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "261",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_array(t_address)dyn_storage))": {
            "label": "mapping(address => mapping(bytes32 => address[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes32,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(address => mapping(bytes32 => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
            "label": "mapping(bytes32 => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_uint256,t_struct(Listing)22930_storage))": {
            "label": "mapping(bytes32 => mapping(uint256 => struct IConsentFactory.Listing))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)12102_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)22930_storage)": {
            "label": "mapping(uint256 => struct IConsentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)12102_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)11787_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Listing)22930_storage": {
            "label": "struct IConsentFactory.Listing",
            "members": [
              {
                "label": "previous",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "consentContract",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "timeExpiring",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)11787_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4faf0781d0bc3cd1e33155dbc53d1fa64848bfa3e92e949ccd9cd858f8da9de5": {
      "address": "0x0fDC9FaC7cB8b348627237dB13FD0E2b3C2709Fc",
      "txHash": "0x9f3d3f476e7e8b9b79ad0006bd9975de497c428dbdc784962071d968a1b18846",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint208)2798_storage)dyn_storage": {
            "label": "struct Checkpoints.Checkpoint208[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace208)2793_storage)": {
            "label": "mapping(address => struct Checkpoints.Trace208)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint208)2798_storage": {
            "label": "struct Checkpoints.Checkpoint208",
            "members": [
              {
                "label": "_key",
                "type": "t_uint48",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint208",
                "offset": 6,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)1455_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(ERC20Storage)1144_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ERC7529Storage)3311_storage": {
            "label": "struct ERC7529Upgradeable.ERC7529Storage",
            "members": [
              {
                "label": "domains",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1035_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(NoncesStorage)1346_storage": {
            "label": "struct NoncesUpgradeable.NoncesStorage",
            "members": [
              {
                "label": "_nonces",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)97_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Trace208)2793_storage": {
            "label": "struct Checkpoints.Trace208",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint208)2798_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(VotesStorage)955_storage": {
            "label": "struct VotesUpgradeable.VotesStorage",
            "members": [
              {
                "label": "_delegatee",
                "type": "t_mapping(t_address,t_address)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_delegateCheckpoints",
                "type": "t_mapping(t_address,t_struct(Trace208)2793_storage)",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalCheckpoints",
                "type": "t_struct(Trace208)2793_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint208": {
            "label": "uint208",
            "numberOfBytes": "26"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Votes": [
            {
              "contract": "VotesUpgradeable",
              "label": "_delegatee",
              "type": "t_mapping(t_address,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:41",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_delegateCheckpoints",
              "type": "t_mapping(t_address,t_struct(Trace208)2793_storage)",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:43",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "VotesUpgradeable",
              "label": "_totalCheckpoints",
              "type": "t_struct(Trace208)2793_storage",
              "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:45",
              "offset": 0,
              "slot": "2"
            }
          ],
          "erc7201:openzeppelin.storage.Nonces": [
            {
              "contract": "NoncesUpgradeable",
              "label": "_nonces",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/utils/NoncesUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:snickerdoodle.erc7529": [
            {
              "contract": "ERC7529Upgradeable",
              "label": "domains",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/erc7529/ERC7529Upgradeable.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "d337bb20db7d3ccf8ffd84b90fce00c954307be7a0004572c240d65292df8581": {
      "address": "0x078361fb4549DC6C96247548d33F67D4F0Ae0BDB",
      "txHash": "0xe1813acb7bb4821acdb45ea8310886c25ea0bff8858572a689c6bceddeb63925",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3662_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IContentFactory.Listing))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(bytes32 => mapping(address => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3662_storage)))": {
            "label": "mapping(bytes32 => mapping(address => mapping(uint256 => struct IContentFactory.Listing)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)3662_storage)": {
            "label": "mapping(uint256 => struct IContentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ContentFactoryStorage)3469_storage": {
            "label": "struct ContentFactoryUpgradeable.ContentFactoryStorage",
            "members": [
              {
                "label": "governanceToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "listingDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTagsPerListing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokens",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contentAddressCheck",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "namespaceBlockedList",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "listingTotals",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "listings",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3662_storage)))",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "listingOccupants",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(ERC7529Storage)3311_storage": {
            "label": "struct ERC7529Upgradeable.ERC7529Storage",
            "members": [
              {
                "label": "domains",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)1035_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Listing)3662_storage": {
            "label": "struct IContentFactory.Listing",
            "members": [
              {
                "label": "previous",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contentObject",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timeExpiring",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:snickerdoodle.erc7529": [
            {
              "contract": "ERC7529Upgradeable",
              "label": "domains",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/erc7529/ERC7529Upgradeable.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:snickerdoodle.contentfactory": [
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "governanceToken",
              "type": "t_address",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingDuration",
              "type": "t_uint256",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:19",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "maxTagsPerListing",
              "type": "t_uint256",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:21",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "stakingTokens",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:23",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "contentAddressCheck",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:25",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "namespaceBlockedList",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:27",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingTotals",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:31",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listings",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)3662_storage)))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:36",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingOccupants",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:41",
              "offset": 0,
              "slot": "8"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "a41f430e8392666135bea5ab22dd74eb54ef3a4d8f08c989e584a4d7bd12a46f": {
      "address": "0x7fa61cD4Cb3FF0e7d9b0A57A94AFA2d16C2DD18c",
      "txHash": "0x4ee46777e8606d535e7406f361555c679cd2378dd42a6a40a85921e5b0949195",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "questionnaires",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_string_storage)dyn_storage",
            "contract": "Questionnaires",
            "src": "contracts/recomender/Questionnaires.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC7529Storage)227_storage": {
            "label": "struct ERC7529Upgradeable.ERC7529Storage",
            "members": [
              {
                "label": "domains",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:snickerdoodle.erc7529": [
            {
              "contract": "ERC7529Upgradeable",
              "label": "domains",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/erc7529/ERC7529Upgradeable.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "dfb96401079408b893312742ec48adad2bab5d2ba4ca17dcba478ab85d09b919": {
      "address": "0x996f8a725BE35724443Fa4e38Ae6F76C89b778B0",
      "txHash": "0xfa1245af58ff5ceda843cbe977f13ff0e6280c3b1bf66f51b693fb9917dd0bca",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "beaconAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "ConsentFactory",
            "src": "contracts/consent/ConsentFactory.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1613_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IContentFactory.Listing))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))": {
            "label": "mapping(bytes32 => mapping(address => mapping(address => uint256)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1613_storage)))": {
            "label": "mapping(bytes32 => mapping(address => mapping(uint256 => struct IContentFactory.Listing)))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))": {
            "label": "mapping(bytes32 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)25_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Listing)1613_storage)": {
            "label": "mapping(uint256 => struct IContentFactory.Listing)",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ContentFactoryStorage)1420_storage": {
            "label": "struct ContentFactoryUpgradeable.ContentFactoryStorage",
            "members": [
              {
                "label": "governanceToken",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "listingDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxTagsPerListing",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stakingTokens",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "contentAddressCheck",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "namespaceBlockedList",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "listingTotals",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "listings",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1613_storage)))",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "listingOccupants",
                "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(ERC7529Storage)1316_storage": {
            "label": "struct ERC7529Upgradeable.ERC7529Storage",
            "members": [
              {
                "label": "domains",
                "type": "t_mapping(t_bytes32,t_bool)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(InitializableStorage)93_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Listing)1613_storage": {
            "label": "struct IContentFactory.Listing",
            "members": [
              {
                "label": "previous",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "next",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "contentObject",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "timeExpiring",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(RoleData)25_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)25_storage)",
              "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:snickerdoodle.erc7529": [
            {
              "contract": "ERC7529Upgradeable",
              "label": "domains",
              "type": "t_mapping(t_bytes32,t_bool)",
              "src": "contracts/erc7529/ERC7529Upgradeable.sol:13",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:snickerdoodle.contentfactory": [
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "governanceToken",
              "type": "t_address",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:17",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingDuration",
              "type": "t_uint256",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:19",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "maxTagsPerListing",
              "type": "t_uint256",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:21",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "stakingTokens",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:23",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "contentAddressCheck",
              "type": "t_mapping(t_address,t_bool)",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:25",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "namespaceBlockedList",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:27",
              "offset": 0,
              "slot": "5"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingTotals",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_uint256))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:31",
              "offset": 0,
              "slot": "6"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listings",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_uint256,t_struct(Listing)1613_storage)))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:36",
              "offset": 0,
              "slot": "7"
            },
            {
              "contract": "ContentFactoryUpgradeable",
              "label": "listingOccupants",
              "type": "t_mapping(t_bytes32,t_mapping(t_address,t_mapping(t_address,t_uint256)))",
              "src": "contracts/recomender/ContentFactoryUpgradeable.sol:41",
              "offset": 0,
              "slot": "8"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
