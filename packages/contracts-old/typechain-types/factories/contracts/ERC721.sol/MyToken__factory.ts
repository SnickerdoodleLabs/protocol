/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/ERC721.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ERC721EnumerableForbiddenBatchMint",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "ERC721OutOfBoundsIndex",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b1838038062001b18833981016040819052620000349162000128565b806040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b815250816000908162000082919062000201565b50600162000091828262000201565b5050506001600160a01b038116620000c357604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000ce81620000d6565b5050620002cd565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200013b57600080fd5b81516001600160a01b03811681146200015357600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018557607f821691505b602082108103620001a657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fc576000816000526020600020601f850160051c81016020861015620001d75750805b601f850160051c820191505b81811015620001f857828155600101620001e3565b5050505b505050565b81516001600160401b038111156200021d576200021d6200015a565b62000235816200022e845462000170565b84620001ac565b602080601f8311600181146200026d5760008415620002545750858301515b600019600386901b1c1916600185901b178555620001f8565b600085815260208120601f198616915b828110156200029e578886015182559484019460019091019084016200027d565b5085821015620002bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61183b80620002dd6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde14610266578063c87b56dd14610279578063cd279c7c1461028c578063e985e9c51461029f578063f2fde38b146102db57600080fd5b806370a082311461021f578063715018a6146102325780638da5cb5b1461023a57806395d89b411461024b578063a22cb4651461025357600080fd5b806323b872dd116100f457806323b872dd146101c05780632f745c59146101d357806342842e0e146101e65780634f6ccce7146101f95780636352211e1461020c57600080fd5b806301ffc9a71461013157806306fdde0314610159578063081812fc1461016e578063095ea7b31461019957806318160ddd146101ae575b600080fd5b61014461013f3660046112ce565b6102ee565b60405190151581526020015b60405180910390f35b6101616102ff565b604051610150919061133b565b61018161017c36600461134e565b610391565b6040516001600160a01b039091168152602001610150565b6101ac6101a7366004611383565b6103ba565b005b6008545b604051908152602001610150565b6101ac6101ce3660046113ad565b6103c9565b6101b26101e1366004611383565b610459565b6101ac6101f43660046113ad565b6104be565b6101b261020736600461134e565b6104de565b61018161021a36600461134e565b610537565b6101b261022d3660046113e9565b610542565b6101ac61058a565b600b546001600160a01b0316610181565b61016161059e565b6101ac610261366004611404565b6105ad565b6101ac6102743660046114cc565b6105b8565b61016161028736600461134e565b6105cf565b6101ac61029a366004611548565b6105da565b6101446102ad3660046115b3565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101ac6102e93660046113e9565b6105f6565b60006102f982610634565b92915050565b60606000805461030e906115e6565b80601f016020809104026020016040519081016040528092919081815260200182805461033a906115e6565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600061039c82610659565b506000828152600460205260409020546001600160a01b03166102f9565b6103c5828233610692565b5050565b6001600160a01b0382166103f857604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061040583833361069f565b9050836001600160a01b0316816001600160a01b031614610453576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016103ef565b50505050565b600061046483610542565b82106104955760405163295f44f760e21b81526001600160a01b0384166004820152602481018390526044016103ef565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6104d9838383604051806020016040528060008152506105b8565b505050565b60006104e960085490565b82106105125760405163295f44f760e21b815260006004820152602481018390526044016103ef565b6008828154811061052557610525611620565b90600052602060002001549050919050565b60006102f982610659565b60006001600160a01b03821661056e576040516322718ad960e21b8152600060048201526024016103ef565b506001600160a01b031660009081526003602052604090205490565b6105926106b4565b61059c60006106e1565b565b60606001805461030e906115e6565b6103c5338383610733565b6105c38484846103c9565b610453848484846107d2565b60606102f9826108fb565b6105e26106b4565b6105ec8383610a04565b6104d98282610a1e565b6105fe6106b4565b6001600160a01b03811661062857604051631e4fbdf760e01b8152600060048201526024016103ef565b610631816106e1565b50565b60006001600160e01b03198216632483248360e11b14806102f957506102f982610a6e565b6000818152600260205260408120546001600160a01b0316806102f957604051637e27328960e01b8152600481018490526024016103ef565b6104d98383836001610a93565b60006106ac848484610bb8565b949350505050565b600b546001600160a01b0316331461059c5760405163118cdaa760e01b81523360048201526024016103ef565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661076557604051630b61174360e31b81526001600160a01b03831660048201526024016103ef565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b1561045357604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610814903390889087908790600401611636565b6020604051808303816000875af192505050801561084f575060408051601f3d908101601f1916820190925261084c91810190611672565b60015b6108b8573d80801561087d576040519150601f19603f3d011682016040523d82523d6000602084013e610882565b606091505b5080516000036108b057604051633250574960e11b81526001600160a01b03851660048201526024016103ef565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146108f457604051633250574960e11b81526001600160a01b03851660048201526024016103ef565b5050505050565b606061090682610659565b506000828152600a602052604081208054610920906115e6565b80601f016020809104026020016040519081016040528092919081815260200182805461094c906115e6565b80156109995780601f1061096e57610100808354040283529160200191610999565b820191906000526020600020905b81548152906001019060200180831161097c57829003601f168201915b5050505050905060006109b760408051602081019091526000815290565b905080516000036109c9575092915050565b8151156109fb5780826040516020016109e392919061168f565b60405160208183030381529060405292505050919050565b6106ac84610c85565b6103c5828260405180602001604052806000815250610cfa565b6000828152600a60205260409020610a36828261170e565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b60006001600160e01b0319821663780e9d6360e01b14806102f957506102f982610d11565b8080610aa757506001600160a01b03821615155b15610b88576000610ab784610659565b90506001600160a01b03831615801590610ae35750826001600160a01b0316816001600160a01b031614155b8015610b1557506001600160a01b0380821660009081526005602090815260408083209387168352929052205460ff16155b15610b3e5760405163a9fbf51f60e01b81526001600160a01b03841660048201526024016103ef565b8115610b865783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b600080610bc6858585610d61565b90506001600160a01b038116610c2357610c1e84600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b610c46565b846001600160a01b0316816001600160a01b031614610c4657610c468185610e5a565b6001600160a01b038516610c6257610c5d84610eeb565b6106ac565b846001600160a01b0316816001600160a01b0316146106ac576106ac8585610f9a565b6060610c9082610659565b506000610ca860408051602081019091526000815290565b90506000815111610cc85760405180602001604052806000815250610cf3565b80610cd284610fea565b604051602001610ce392919061168f565b6040516020818303038152906040525b9392505050565b610d04838361108a565b6104d960008484846107d2565b60006001600160e01b031982166380ac58cd60e01b1480610d4257506001600160e01b03198216635b5e139f60e01b145b806102f957506301ffc9a760e01b6001600160e01b03198316146102f9565b6000828152600260205260408120546001600160a01b0390811690831615610d8e57610d8e8184866110ef565b6001600160a01b03811615610dcc57610dab600085600080610a93565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610dfb576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6000610e6583610542565b600083815260076020526040902054909150808214610eb8576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090610efd906001906117ce565b60008381526009602052604081205460088054939450909284908110610f2557610f25611620565b906000526020600020015490508060088381548110610f4657610f46611620565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480610f7e57610f7e6117ef565b6001900381819060005260206000200160009055905550505050565b60006001610fa784610542565b610fb191906117ce565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60606000610ff783611153565b600101905060008167ffffffffffffffff81111561101757611017611440565b6040519080825280601f01601f191660200182016040528015611041576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461104b57509392505050565b6001600160a01b0382166110b457604051633250574960e11b8152600060048201526024016103ef565b60006110c28383600061069f565b90506001600160a01b038116156104d9576040516339e3563760e11b8152600060048201526024016103ef565b6110fa838383611235565b6104d9576001600160a01b03831661112857604051637e27328960e01b8152600481018290526024016103ef565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016103ef565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061119c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106111c8576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106111e657662386f26fc10000830492506010015b6305f5e10083106111fe576305f5e100830492506008015b612710831061121257612710830492506004015b60648310611224576064830492506002015b600a83106102f95760010192915050565b60006001600160a01b038316158015906106ac5750826001600160a01b0316846001600160a01b0316148061128f57506001600160a01b0380851660009081526005602090815260408083209387168352929052205460ff165b806106ac5750506000908152600460205260409020546001600160a01b03908116911614919050565b6001600160e01b03198116811461063157600080fd5b6000602082840312156112e057600080fd5b8135610cf3816112b8565b60005b838110156113065781810151838201526020016112ee565b50506000910152565b600081518084526113278160208601602086016112eb565b601f01601f19169290920160200192915050565b602081526000610cf3602083018461130f565b60006020828403121561136057600080fd5b5035919050565b80356001600160a01b038116811461137e57600080fd5b919050565b6000806040838503121561139657600080fd5b61139f83611367565b946020939093013593505050565b6000806000606084860312156113c257600080fd5b6113cb84611367565b92506113d960208501611367565b9150604084013590509250925092565b6000602082840312156113fb57600080fd5b610cf382611367565b6000806040838503121561141757600080fd5b61142083611367565b91506020830135801515811461143557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561147157611471611440565b604051601f8501601f19908116603f0116810190828211818310171561149957611499611440565b816040528093508581528686860111156114b257600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156114e257600080fd5b6114eb85611367565b93506114f960208601611367565b925060408501359150606085013567ffffffffffffffff81111561151c57600080fd5b8501601f8101871361152d57600080fd5b61153c87823560208401611456565b91505092959194509250565b60008060006060848603121561155d57600080fd5b61156684611367565b925060208401359150604084013567ffffffffffffffff81111561158957600080fd5b8401601f8101861361159a57600080fd5b6115a986823560208401611456565b9150509250925092565b600080604083850312156115c657600080fd5b6115cf83611367565b91506115dd60208401611367565b90509250929050565b600181811c908216806115fa57607f821691505b60208210810361161a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152611668608083018461130f565b9695505050505050565b60006020828403121561168457600080fd5b8151610cf3816112b8565b600083516116a18184602088016112eb565b8351908301906116b58183602088016112eb565b01949350505050565b601f8211156104d9576000816000526020600020601f850160051c810160208610156116e75750805b601f850160051c820191505b81811015611706578281556001016116f3565b505050505050565b815167ffffffffffffffff81111561172857611728611440565b61173c8161173684546115e6565b846116be565b602080601f83116001811461177157600084156117595750858301515b600019600386901b1c1916600185901b178555611706565b600085815260208120601f198616915b828110156117a057888601518255948401946001909101908401611781565b50858210156117be5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156102f957634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fdfea26469706673582212202cd1df7c7add8eba85f93dcee2c0497fe6bcce6c67399e04fa871521f024d7fa64736f6c63430008180033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
